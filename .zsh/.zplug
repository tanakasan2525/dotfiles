############################################
# zplug
############################################

source ~/.zplug/init.zsh

zplug "junegunn/fzf-bin", from:gh-r, as:command, rename-to:fzf
alias @='fzf'
function select-history() {
	BUFFER=$(history -n -r 1 | fzf --no-sort +m --query "$LBUFFER" --prompt="History > ")
	CURSOR=$#BUFFER
}
zle -N select-history
bindkey '^r' select-history

zstyle ':notify:*' command-complete-timeout 5
zplug "marzocchi/zsh-notify"


zplug "supercrabtree/k"
zplug "Tarrasch/zsh-bd"
zplug "mollifier/cd-gitroot"
zplug "zsh-users/zsh-completions"
zplug "glidenote/hub-zsh-completion"
zplug 'Valodim/zsh-curl-completion'

zplug "b4b4r07/enhancd", use:init.sh  # or wting/autojump
export ENHANCD_FILTER=fzf

zplug "joel-porquet/zsh-dircolors-solarized"
[[ ! -e $HOME/.zsh-dircolors.config ]] && echo "dircolors.ansi-universal" > $HOME/.zsh-dircolors.config

if ! zplug check --verbose; then
	printf "Install? [y/N]: "
	if read -q; then
		echo; zplug install
	fi
fi
zplug load --verbose

############################################
# functions using zplug
############################################

# Git #############

gitco() {
	local branches branch
	branches=$(git branch -vv) &&
		branch=$(echo "$branches" | fzf +m) &&
		git checkout $(echo "$branch" | awk '{print $1}' | sed "s/.* //")
}
zle -N gitco

gitlog() {
	git log --graph --color=always \
		--format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
	fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
		--bind "ctrl-m:execute:
	(grep -o '[a-f0-9]\{7\}' | head -1 |
	xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
	{}
	FZF-EOF"
}

# list your stashes
# enter shows you the contents of the stash
# ctrl-d shows a diff of the stash against your current HEAD
# ctrl-b checks the stash out as a branch, for easier merging
gitstash() {
	local out q k sha
	while out=$(
		git stash list --pretty="%C(yellow)%h %>(14)%Cgreen%cr %C(blue)%gs" |
		fzf --ansi --no-sort --query="$q" --print-query \
			--expect=ctrl-d,ctrl-b);
	do
		mapfile -t out <<< "$out"
		q="${out[0]}"
		k="${out[1]}"
		sha="${out[-1]}"
		sha="${sha%% *}"
		[[ -z "$sha" ]] && continue
		if [[ "$k" == 'ctrl-d' ]]; then
			git diff $sha
		elif [[ "$k" == 'ctrl-b' ]]; then
			git stash branch "stash-$sha" $sha
			break;
		else
			git stash show -p $sha
		fi
	done
}

# Grep #############

grepf() {
	grep --line-buffered --color=never -r "" * | fzf
}

# Process #############

psf() {
	ps aux | fzf
}

pkillf() {
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    kill -${1:-9} $pid
  fi
}

# Tmux #############

tmuxaf() {
	local no
	no=`tmux list-sessions | fzf | cut -d: -f 1`
	tmux a -t $no
}

